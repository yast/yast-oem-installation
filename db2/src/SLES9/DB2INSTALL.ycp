/************************************************************************
 *                                                                      *
 *                         __   __    ____ _____                        *
 *                         \ \ / /_ _/ ___|_   _|                       *
 *                          \ V / _` \___ \ | |                         *
 *                           | | (_| |___) || |                         *
 *                           |_|\__,_|____/ |_|                         *
 *                                                                      *
 *                Module for the IBM DB2 Universal Database             *
 *                                                                      *
 ************************************************************************

   Copyright (C) 2003  SUSE LINUX AG, Nuernberg, Germany

   Author:	David Strbac <strbac@suse.de>
		Frank Balzer <frank.balzer@suse.com>

   $Id$


   This file is part of yast2_db2setup.

   yast2_db2setup is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of the
   License, or (at your option) any later version.

   yast2_db2setup is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with yast2_db2setup; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
   USA


 ************************************************************************
 *                                                                      *
 *  FILE:     DB2INSTALL                                                *
 *                                                                      *
 *  FUNCTION: This file contains ycp functions to install DB2.          *
 *                                                                      *
 ***********************************************************************/



{
	module "DB2INSTALL";


	import "DB2DATA";



	define string expand_string(string content,map config)
	``{
		
		map output = (map) SCR::Execute(.target.bash_output, "echo \"" + content + "\"", config);
		return(output["stdout"]:"error");
	}

	define string uncomment_string(string content,string expression)
	``{
		string t = "echo \"" + content + "\""	 + " | sed -e 's/\*\*" 
						+ expression + "/" + expression + "/'";
		y2milestone("uc %1",t);
		map output = (map) SCR::Execute(.target.bash_output, "echo \"" + content + "\""	 + " | sed -e 's/\*\*" 
						+ expression + "/" + expression + "/'");
		 
		y2milestone("uc %1",output["stderr"]:"error");
		return(output["stdout"]:"error");
	}

	define string get_template()
	``{ 
		string data = (string) SCR::Read(.target.string, DB2DATA::DB2["__TEMPLATE"]:"error");
		y2milestone("Template1: %1",data);
		if (data == "" || data == nil) {
			data = (string) SCR::Read(.target.string, DB2DATA::DB2["__TEMPLATE_FALLBACK"]:"error");
			y2milestone("Template2: %1",data);
		}	 
		return(data);
	  }	
		

	define boolean create_instance() 
	``{
		if ( DB2DATA::DB2_INST["PASSWORD"]:"" != "") {
			SCR::Execute(.target.bash, "groupadd " + DB2DATA::DB2_INST["GROUP"]:"");
			SCR::Execute(.target.bash, "useradd -m -d /home/" + DB2DATA::DB2_INST["PASSWORD"]:"" + 
				"  -g " +  DB2DATA::DB2_INST["GROUP"]:"" + " " + DB2DATA::DB2_INST["NAME"]:"");
                }
	
		
		string instance = "/opt/IBM/db2/V8.1/instance/db2icrt -a SERVER -u " +
				DB2DATA::DB2_FENCED["NAME"]:"" + " " + DB2DATA::DB2_INST["NAME"]:"";

		SCR::Execute(.target.bash,instance);
		
		SCR::Execute(.target.bash, "su - " + DB2DATA::DB2_INST["NAME"]:"" +  " -c \"db2set DB2COMM=tcpip\"");
		SCR::Execute(.target.bash, "su - " + DB2DATA::DB2_INST["NAME"]:"" +  " -c \"db2set DB2AUTOSTART=YES\"");
		
		return true;
	}

	





	global define boolean install_db2()
	``{
		string tmpfile = DB2DATA::DB2["__RESPONSE_FILE"]:"";

		string template = get_template();
		template = expand_string(template, $[   "INSTALL_TYPE" : DB2DATA::DB2["INSTALL_TYPE"]:"error", 
							"INSTANCE" : DB2DATA::DB2_INST["NAME"]:"error",
							"NAME" : DB2DATA::DB2_INST["NAME"]:"error",
							"GROUP_NAME": DB2DATA::DB2_INST["GROUP"]:"error",
							"PASSWORD" : DB2DATA::DB2_INST["PASSWORD"]:"error",
							"DAS_USERNAME" : DB2DATA::DB2_DAS["NAME"]:"error",
							"DAS_GROUP_NAME": DB2DATA::DB2_DAS["GROUP"]:"error",
							"DAS_PASSWORD" : DB2DATA::DB2_DAS["PASSWORD"]:"error",
							"FENCED_USERNAME" : DB2DATA::DB2_FENCED["NAME"]:"error",
							"FENCED_GROUP_NAME": DB2DATA::DB2_FENCED["GROUP"]:"error",
							"FENCED_PASSWORD" : DB2DATA::DB2_FENCED["PASSWORD"]:"error"]);

		if ( DB2DATA::DB2_INST["PASSWORD"]:"" != "") {
			template = uncomment_string( template,DB2DATA::DB2_INST["NAME"]:"error" + ".");
		}
		if ( DB2DATA::DB2_DAS["PASSWORD"]:"" != "") {
			template = uncomment_string( template,"DAS_");
		}
		if ( DB2DATA::DB2_FENCED["PASSWORD"]:"" != "") {
			template = uncomment_string( template,DB2DATA::DB2_INST["NAME"]:"error" + "." + "FENCED_");
		}
		y2milestone("Content \n%1",template);
		y2milestone("DB2_INST %1",DB2DATA::DB2_INST);
		
		

				

		if(!SCR::Write(.target.string, tmpfile, template))
			return(false);
		

		if(SCR::Execute(.target.bash, DB2DATA::DB2["__PATH_TO_SETUP"]:"/media/cdrom" + "/db2setup -r " + tmpfile) == 0) {
			create_instance();
			return(true);
		}
		else
			return(false);
		
		
	}
}

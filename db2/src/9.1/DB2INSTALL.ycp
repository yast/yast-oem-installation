/************************************************************************
 *                                                                      *
 *                         __   __    ____ _____                        *
 *                         \ \ / /_ _/ ___|_   _|                       *
 *                          \ V / _` \___ \ | |                         *
 *                           | | (_| |___) || |                         *
 *                           |_|\__,_|____/ |_|                         *
 *                                                                      *
 *                Module for the IBM DB2 Universal Database             *
 *                                                                      *
 ************************************************************************

   Copyright (C) 2003  SUSE LINUX AG, Nuernberg, Germany

   Author:	David Strbac <strbac@suse.de>
		Frank Balzer <frank.balzer@suse.com>

   $Id$


   This file is part of yast2_db2setup.

   yast2_db2setup is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of the
   License, or (at your option) any later version.

   yast2_db2setup is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with yast2_db2setup; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
   USA


 ************************************************************************
 *                                                                      *
 *  FILE:     DB2INSTALL                                                *
 *                                                                      *
 *  FUNCTION: This file contains ycp functions to install DB2.          *
 *                                                                      *
 ***********************************************************************/



{
	module "DB2INSTALL";


	import "DB2DATA";




	define string config_to_string(map <string,any> config)
	``{


		string content = "";

		

		foreach (string k, any v1, config,
		``{	string v = tostring(v1);
			if( !regexpmatch(k, "^__*") && v != nil && v != "") {
					content = content + k + " = " + v + "\n";
			}
		});

		return(content);
	}

	define string get_response_file_header()
	``{
		
		string content = "*-----------------------------------------------------------\n" +
				 "* Generated response file used by the YaST2 DB2 Setup wizard\n" +
				 "* generation time: " +
				 timestring("%Y-%m-%d %l:%M %p", time(), false) +
				 "\n*-----------------------------------------------------------\n";
		content = content + "LIC_AGREEMENT = " + DB2DATA::DB2["LIC_AGREEMENT"]:"DECLINE" + "\n";
		content = content + "PROD = "  + DB2DATA::DB2["PROD"]:"" + "\n";
		content = content + "INSTALL_TYPE = "  + DB2DATA::DB2["INSTALL_TYPE"]:"TYPICAL" + "\n";
		
		return(content);
	}

	define string get_das_header() 
	``{
		
		string das =     "*-----------------------------------------------------------\n" +
				 "*  Das properties\n" +
				 "*-----------------------------------------------------------\n";

		return(das);
	}

	define string get_instance()
	``{
		string ret = "";
		if (DB2DATA::DB2["__CREATE_INSTANCE"]:false == false) {
			return(ret);
		}
		string INSTANCE = DB2DATA::DB2_INST["INSTANCE"]:"";
		if(size(INSTANCE) == 0) {
			return ret;
		}
		ret = ret + "* ----------------------------------------------\n";
		ret = ret + "*  Instance properties\n";
		ret = ret + "* ----------------------------------------------\n";
		ret = ret + "INSTANCE  = " + INSTANCE + "\n";
		ret = ret + INSTANCE + ".TYPE = " +  DB2DATA::DB2_INST["TYPE"]:"ese" + "\n";
		ret = ret + INSTANCE + ".WORDWIDTH = " +  DB2DATA::DB2_INST["WORDWIDTH"]:"32" + "\n";
		ret = ret + INSTANCE + ".NAME = " +  DB2DATA::DB2_INST["NAME"]:"" + "\n";
		if( DB2DATA::DB2_INST["__NEW_USER"]:false == true) {
		 	
			ret = ret + INSTANCE + ".GROUP_NAME = " +  DB2DATA::DB2_INST["GROUP_NAME"]:"" + "\n";
			ret = ret + INSTANCE + ".HOME_DIRECTORY = " +  DB2DATA::DB2_INST["HOME_DIRECTORY"]:"" + "\n";
			if(size(DB2DATA::DB2_INST["UID"]:"") > 0) 
				ret = ret + INSTANCE + ".UID = " +  DB2DATA::DB2_INST["UID"]:"" + "\n";
			if(size(DB2DATA::DB2_INST["GID"]:"") > 0) 
				ret = ret + INSTANCE + ".GID = " +  DB2DATA::DB2_INST["GID"]:"" + "\n";
			
			ret = ret + INSTANCE + ".PASSWORD = " +  DB2DATA::DB2_INST["PASSWORD"]:"" + "\n";
		}
		ret = ret + INSTANCE + ".AUTOSTART = " +  DB2DATA::DB2_INST["AUTOSTART"]:"" + "\n";
		ret = ret + INSTANCE + ".AUTHENTICATION = " +  DB2DATA::DB2_INST["AUTHENTICATION"]:"" + "\n";
		ret = ret + INSTANCE + ".SVCENAME = " +  DB2DATA::DB2_INST["SVCENAME"]:"" + DB2DATA::DB2_INST["NAME"]:"" +"\n";
		ret = ret + INSTANCE + ".PORT_NUMBER = " +  DB2DATA::DB2_INST["PORT_NUMBER"]:""  +"\n";
		ret = ret + INSTANCE + ".FCM_PORT_NUMBER = " +  DB2DATA::DB2_INST["FCM_PORT_NUMBER"]:""  +"\n";
		ret = ret + INSTANCE + ".MAX_LOGICAL_NODES = " +  DB2DATA::DB2_INST["MAX_LOGICAL_NODES"]:""  +"\n";
		
		
		return ret;	
	}

	define string  get_fenced_user()
	``{
		string ret = "";
		if (DB2DATA::DB2["__CREATE_INSTANCE"]:false == false) {
			return(ret);
		}
		string INSTANCE = DB2DATA::DB2_INST["INSTANCE"]:"";
		if(size(INSTANCE) == 0) {
			return ret;
		}
		ret = ret +	 "*-----------------------------------------------------------\n" +
				 "*  Fenced user\n" +
				 "*-----------------------------------------------------------\n";
		ret = ret + INSTANCE + ".FENCED_USERNAME = " +  DB2DATA::DB2_FENCED["FENCED_USERNAME"]:"" + "\n";
		if( DB2DATA::DB2_FENCED["__NEW_USER"]:false == true) {
			ret = ret + INSTANCE + ".FENCED_GROUP_NAME = " +  DB2DATA::DB2_FENCED["FENCED_GROUP_NAME"]:"" + "\n";
			ret = ret + INSTANCE + ".FENCED_HOME_DIRECTORY = " +  DB2DATA::DB2_FENCED["FENCED_HOME_DIRECTORY"]:"" + "\n";
			if(size(DB2DATA::DB2_FENCED["FENCED_UID"]:"") > 0) 
				ret = ret + INSTANCE + ".FENCED_UID = " +  DB2DATA::DB2_FENCED["FENCED_UID"]:"" + "\n";
			if(size(DB2DATA::DB2_FENCED["GID"]:"") > 0) 
				ret = ret + INSTANCE + ".FENCED_GID = " +  DB2DATA::DB2_FENCED["FENCED_GID"]:"" + "\n";
			
			ret = ret + INSTANCE + ".FENCED_PASSWORD = " +  DB2DATA::DB2_FENCED["FENCED_PASSWORD"]:"" + "\n";
		}	
		return ret;
	}

	define string  get_das_user()
	``{
		string ret = "";
		ret = ret +	 "*-----------------------------------------------------------\n" +
				 "*  Das properties\n" +
				 "*-----------------------------------------------------------\n";
		ret = ret + "DAS_USERNAME = " +  DB2DATA::DB2_DAS["DAS_USERNAME"]:"" + "\n";
		if( DB2DATA::DB2_DAS["__NEW_USER"]:false == true) {
			ret = ret  + "DAS_GROUP_NAME = " +  DB2DATA::DB2_DAS["DAS_GROUP_NAME"]:"" + "\n";
			ret = ret + "DAS_HOME_DIRECTORY = " +  DB2DATA::DB2_DAS["DAS_HOME_DIRECTORY"]:"" + "\n";
			if(size(DB2DATA::DB2_DAS["DAS_UID"]:"") > 0) 
				ret = ret + "DAS_UID = " +  DB2DATA::DB2_DAS["DAS_UID"]:"" + "\n";
			if(size(DB2DATA::DB2_DAS["GID"]:"") > 0) 
				ret = ret + "DAS_GID = " +  DB2DATA::DB2_DAS["DAS_GID"]:"" + "\n";
			
			ret = ret + "DAS_PASSWORD = " +  DB2DATA::DB2_DAS["DAS_PASSWORD"]:"" + "\n";
		}	
		return ret;
	}
	define string get_tools()
	``{
		string ret= "";
		if (DB2DATA::DB2_TOOLS["__NO_TOOLS"]:true == true) {
			return(ret);
		}
		if (DB2DATA::DB2["__CREATE_INSTANCE"]:false == false) {
			return(ret);
		}
		 
		ret = ret + "TOOLS_CATALOG_DATABASE = " + DB2DATA::DB2_TOOLS["TOOLS_CATALOG_DATABASE"]:"" + "\n";
		ret = ret + "TOOLS_CATALOG_SCHEMA = " + DB2DATA::DB2_TOOLS["TOOLS_CATALOG_SCHEMA"]:"" + "\n";
		string DATABASE = DB2DATA::DB2_TOOLS["DATABASE"]:"";
		ret = ret + "DATABASE = " +  DB2DATA::DB2_TOOLS["DATABASE"]:"" + "\n";
		ret = ret + DATABASE + ".INSTANCE = " +  DB2DATA::DB2_TOOLS["INSTANCE"]:"" + "\n";
		ret = ret + DATABASE + ".DATABASE_NAME = " +  DB2DATA::DB2_TOOLS["DATABASE_NAME"]:"" + "\n";
		ret = ret + DATABASE + ".LOCATION = " +  DB2DATA::DB2_TOOLS["LOCATION"]:"" + "\n";
		return ret;
	}

	define string get_contact()
	``{
		string ret= "";
		if (DB2DATA::DB2_CONTACT["__NO_CONTACT"]:true == true) {
			return(ret);
		}
		if (DB2DATA::DB2["__CREATE_INSTANCE"]:false == false) {
			return(ret);
		}
		ret = ret + "CONTACT = " + DB2DATA::DB2_CONTACT["CONTACT"]:"" + "\n";
		string CONTACT = DB2DATA::DB2_CONTACT["CONTACT"]:"";
		ret = ret + CONTACT + ".CONTACT_NAME = " + DB2DATA::DB2_CONTACT["CONTACT_NAME"]:"" + "\n";	
		ret = ret + CONTACT + ".EMAIL = " + DB2DATA::DB2_CONTACT["EMAIL"]:"" + "\n";
		if (DB2DATA::DB2_CONTACT["PAGER"]:false == true) {
			ret = ret + CONTACT + ".PAGER = true\n";	
		}
		else {
			ret = ret + CONTACT + ".PAGER = false\n";
		}
		ret = ret + CONTACT + ".INSTANCE = " + DB2DATA::DB2_CONTACT["INSTANCE"]:"" + "\n";
		return ret;
	}
		

	global define boolean write_response_file()
	``{

		string content = get_response_file_header();

		content = content + get_das_user();
		content = content + get_instance();
		content = content + get_fenced_user();
		content = content + get_tools();
		content = content + get_contact();

		if(SCR::Write(.target.string, DB2DATA::DB2["__DB2_RESPONSE_FILE_PATH"]:"error",content)) {	
			return(true);
		}	
		else
			return(false);
	}





	global define boolean install_db2()
	``{
		string tmpfile = (string)SCR::Read(.target.tmpdir);
		tmpfile = tmpfile + "YaST2_DB2_ESE.tmp";
		DB2DATA::DB2["__YAST_TEMP_FILE"] = tmpfile;

		string content = get_response_file_header();

		content = content + get_das_user();
		content = content + get_instance();
		content = content + get_fenced_user();
		content = content + get_tools();
		content = content + get_contact();

		

		if(!SCR::Write(.target.string, tmpfile, content))
			return(false);
		

		if(SCR::Execute(.target.bash, DB2DATA::DB2["__PATH_TO_SETUP"]:"/media/cdrom" + "/db2setup -r " + tmpfile) == 0)
			return(true);
		else
			return(false);

	}
}

/*
 * Oracle Installation Module
 *
 * Author: Marc Ruehrschneck <mac@suse.de>
 */
{
    import "Wizard";			// For the wizard dialog itself
    import "Popup";	// For Popup::YesNo()
    import "Progress";


    //
    // Initialize local variables
    //
    integer wizard_stage  = 1;
    integer min_stage	  = 1;
    integer max_stage	  = 4;
    string  help_text     = "";
    string  agent         = "agent/yast2-orainst.sh";
    string  inst_name     = "/tmp/orainst/Disk1/runInstaller";
    boolean inst_complete = false;

    //
    // source and destination directory
    //
    string sourcedir = "/dev/cdrom";
    string destinationdir = "/opt/orainst";

    //
    // HELP TEXT
    // for all three stages
    //
    string orainst_s1_help =
    // Translators: help text for stage 1
    _("<p>After the system was prepared for <b>Oracle</b>, the database itself
needs to be installed. This installer leads you through the several steps
necessary for the installation of <b>Oracle</b>. This includes:
<ul>
<li>Defining the source and destination for the installation media.
<li>Copying the <b>Oracle</b> installation media to a temporary directory on the
system.
<li>Start the Oracle installer to install the actual software.
</ul>
<p>
Please define the <b>source media</b> and <b>destination directory</b> in this first step.
Then select <b>Next</b>.
");
    string orainst_s2_help =
    // Translators: help text for stage 2
    _("<p>The <b>Oracle</b> installation media is now being copied to the
system.<p>Please swap the installation CDs when requested.");
    string orainst_s3_help =
    // Translators: help text for stage 3
    _("<p>The <b>Oracle</b> installation media have been copied to the system.
Select <b>Start Oracle Installer</b> to start the installation of the
database");
    string orainst_s4_help =
    // Translators: help text for stage 4
    _("<p>The <b>Oracle</b> installation is complete. The installer is cleaning
up yor system now.");


    // Initial dialog creation
    Wizard::CreateDialog();


    // Input loop - left only via "Abort" or window manager close buttons
    while( true )
    {
	boolean have_back_button = false;
	boolean have_next_button = false;

	if ( wizard_stage > min_stage )
	{
	    have_back_button = true;
	}
	if ( wizard_stage < max_stage )
	{
	    have_next_button = true;
	}


	// Dynamically set wizard contents according to current wizard stage

	string headline  = sformat( "Oracle Installation - Stage %1", wizard_stage );

        term buttons = nil;

	if ( wizard_stage == 1 )
	{
            help_text = orainst_s1_help;

	    buttons = `VBox(
			  `PushButton( `id( `source ), _("Set media source") ),
			  `PushButton( `id( `destination ), _("Set media destination") )
		      );
	}
	if ( wizard_stage == 2 )
	{
            help_text = orainst_s2_help;

	    buttons = Progress::New (
	    "Copy Process",
	    "Copying",
	    3,
	    [ "Copying CD1",    "Copying CD2",    "Copying CD3", ],
	    [ "Copying CD1...", "Copying CD2...", "Copying CD3...", "Finished", ],
	    help_text );
	    Wizard::SetContents( headline, buttons, help_text,
			     have_back_button, have_next_button );

	    Progress::NextStage ();
	    if ( !Popup::ContinueCancel( "Please insert Oracle CD1 and hit Continue" ))
	    {
		return;
	    }
	    // mount media
	    // copy cd1
	    // umount media
	    Progress::NextStage ();

	    if ( !Popup::ContinueCancel( "Please insert Oracle CD2 and hit Continue" ))
	    {
		return;
	    }
	    // mount media
	    // copy cd2
	    // umount media
	    Progress::NextStage ();

	    if ( !Popup::ContinueCancel( "Please insert Oracle CD3 and hit Continue" ))
	    {
		return;
	    }
	    // mount media
	    // copy cd3
	    // umount media
	    Progress::NextStage ();

	    Popup::Message( "The media has been successfully copied. Please
remove CD3 and hit Next to continue the installation of Oracle.");
	}
	if ( wizard_stage == 3 )
	{
            help_text = orainst_s3_help;
	    if ( !inst_complete )
	    {
		buttons = `HBox(
			`PushButton( `id( `startinstaller ), _("Start Oracle Installer") ) );
	    }
	    else
	    {
		buttons = `VBox(
			`Label( "The installation of Oracle is
completed. Please select Next to clean up your system and end this
installer."));
	    }
	}
	if ( wizard_stage == 4 )
	{
            help_text = orainst_s4_help;

	    buttons = `VBox(`Label( "Final cleanup in progress ..." ));
	}

	// Exchange the wizard contents, headline and help text.

	Wizard::SetContents( headline, buttons, help_text,
			     have_back_button, have_next_button );



	// Wait for user input.

	any button_id = UI::UserInput();

	// Process user input.

	if ( button_id == `abort ||	// the real "abort" button
	     button_id == `cancel  )	// window manager close button
	{
	    if ( Popup::YesNo( "Really abort?" ) )
	    {
		return; // This is the only exit of the loop and thus the program
	    }
	}
	else if ( button_id == `next )
	{
	    wizard_stage = wizard_stage + 1;
	    // It's perfectly safe not to check for wizard_stage < max_stage
	    // here since the "Next" button will only be active if this is so.
	}
	else if ( button_id == `back )
	{
	    wizard_stage = wizard_stage - 1;
	    // It's perfectly safe not to check for wizard_stage > min_stage
	    // here since the "Back" button will only be active if this is so.
	}
	if (button_id == `destination )
	{
	   if (destinationdir == nil )
	   {
		destinationdir = "";
	   }
	   destinationdir = UI::AskForExistingDirectory ( destinationdir, "Select destination directory" );
	}
	if (button_id == `startinstaller )
	{
	    if ( Popup::ContinueCancel( "The Oracle Installer will be started now." ) )
	    {
		// Start the installer
		// PCODE
		if ( Popup::YesNo( "If the Oracle installation was successful,
select Yes, otherwise No." ) )
                {
			inst_complete = true;
		}
	    }
	}
    }
}
